// Keep these lines for a best effort IntelliSense of Visual Studio 2017.
/// <reference path="../../Packages/Beckhoff.TwinCAT.HMI.Framework.12.742.4/runtimes/native1.12-tchmi/TcHmi.d.ts" />

console.log("IMPORTED custom script")

!function () { "use strict"; function t() { } function e(t) { return t() } function n() { return Object.create(null) } function o(t) { t.forEach(e) } function r(t) { return "function" == typeof t } function c(t, e) { return t != t ? e == e : t !== e || t && "object" == typeof t || "function" == typeof t } function u(t, e) { t.appendChild(e) } function i(t) { t.parentNode.removeChild(t) } function l(t) { return document.createElement(t) } function s(t) { return document.createTextNode(t) } function a(t, e, n) { null == n ? t.removeAttribute(e) : t.getAttribute(e) !== n && t.setAttribute(e, n) } function d(t, e) { e = "" + e, t.wholeText !== e && (t.data = e) } let f; function m(t) { f = t } function p() { if (!f) throw new Error("Function called outside component initialization"); return f } const $ = [], h = [], g = [], v = [], b = Promise.resolve(); let y = !1; function _(t) { g.push(t) } let x = !1; const w = new Set; function k() { if (!x) { x = !0; do { for (let t = 0; t < $.length; t += 1) { const e = $[t]; m(e), E(e.$$) } for (m(null), $.length = 0; h.length;)h.pop()(); for (let t = 0; t < g.length; t += 1) { const e = g[t]; w.has(e) || (w.add(e), e()) } g.length = 0 } while ($.length); for (; v.length;)v.pop()(); y = !1, x = !1, w.clear() } } function E(t) { if (null !== t.fragment) { t.update(), o(t.before_update); const e = t.dirty; t.dirty = [-1], t.fragment && t.fragment.p(t.ctx, e), t.after_update.forEach(_) } } const N = new Set; const A = "undefined" != typeof window ? window : "undefined" != typeof globalThis ? globalThis : global; function C(t, e) { -1 === t.$$.dirty[0] && ($.push(t), y || (y = !0, b.then(k)), t.$$.dirty.fill(0)), t.$$.dirty[e / 31 | 0] |= 1 << e % 31 } function L(c, u, l, s, a, d, p = [-1]) { const $ = f; m(c); const h = u.props || {}, g = c.$$ = { fragment: null, ctx: null, props: d, update: t, not_equal: a, bound: n(), on_mount: [], on_destroy: [], before_update: [], after_update: [], context: new Map($ ? $.$$.context : []), callbacks: n(), dirty: p, skip_bound: !1 }; let v = !1; if (g.ctx = l ? l(c, h, (t, e, ...n) => { const o = n.length ? n[0] : e; return g.ctx && a(g.ctx[t], g.ctx[t] = o) && (!g.skip_bound && g.bound[t] && g.bound[t](o), v && C(c, t)), e }) : [], g.update(), v = !0, o(g.before_update), g.fragment = !!s && s(g.ctx), u.target) { if (u.hydrate) { const t = function (t) { return Array.from(t.childNodes) }(u.target); g.fragment && g.fragment.l(t), t.forEach(i) } else g.fragment && g.fragment.c(); u.intro && ((b = c.$$.fragment) && b.i && (N.delete(b), b.i(y))), function (t, n, c) { const { fragment: u, on_mount: i, on_destroy: l, after_update: s } = t.$$; u && u.m(n, c), _(() => { const n = i.map(e).filter(r); l ? l.push(...n) : o(n), t.$$.on_mount = [] }), s.forEach(_) }(c, u.target, u.anchor), k() } var b, y; m($) } const { document: T } = A; function j(e) { let n, o, r, c, f, m, p, $, h = 1 === e[1] ? "time" : "times"; return { c() { n = l("button"), o = s("Clicked "), r = s(e[1]), c = s(" "), f = s(h), a(n, "style", m = "background-color: " + e[0]), a(n, "class", "svelte-1dxv4w") }, m(t, i) { var l, s, a, d; !function (t, e, n) { t.insertBefore(e, n || null) }(t, n, i), u(n, o), u(n, r), u(n, c), u(n, f), p || (l = n, s = "click", a = e[2], l.addEventListener(s, a, d), $ = () => l.removeEventListener(s, a, d), p = !0) }, p(t, [e]) { 2 & e && d(r, t[1]), 2 & e && h !== (h = 1 === t[1] ? "time" : "times") && d(f, h), 1 & e && m !== (m = "background-color: " + t[0]) && a(n, "style", m) }, i: t, o: t, d(t) { t && i(n), p = !1, $() } } } function B(t) { console.log("incoming evetn", t), console.log("value", t.detail.value) } function O(t, e, n) { let o = 0, { color: r } = e, { eventName: c } = e; var u; return u = () => { document.addEventListener(c, B) }, p().$$.on_mount.push(u), function (t) { p().$$.on_destroy.push(t) }(() => { document.removeEventListener(c, B) }), console.log("color", r), t.$$set = t => { "color" in t && n(0, r = t.color), "eventName" in t && n(3, c = t.eventName) }, [r, o, function () { n(1, o += 1) }, c] } class S extends class { $destroy() { !function (t, e) { const n = t.$$; null !== n.fragment && (o(n.on_destroy), n.fragment && n.fragment.d(e), n.on_destroy = n.fragment = null, n.ctx = []) }(this, 1), this.$destroy = t } $on(t, e) { const n = this.$$.callbacks[t] || (this.$$.callbacks[t] = []); return n.push(e), () => { const t = n.indexOf(e); -1 !== t && n.splice(t, 1) } } $set(t) { var e; this.$$set && (e = t, 0 !== Object.keys(e).length) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1) } }{ constructor(t) { var e; super(), T.getElementById("svelte-1dxv4w-style") || ((e = l("style")).id = "svelte-1dxv4w-style", e.textContent = "button.svelte-1dxv4w{background-color:blue}", u(T.head, e)), L(this, t, O, j, c, { color: 0, eventName: 3 }) } } window.AddButton = function (t) { return new S(t) } }();
